SET SERVEROUTPUT ON;

BEGIN
    -- Delete NA_SUPERVISOR user if exists
    BEGIN
        EXECUTE IMMEDIATE 'DROP USER NA_SUPERVISOR CASCADE';
        DBMS_OUTPUT.PUT_LINE('User NA_SUPERVISOR dropped.');
    EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('User NA_SUPERVISOR does not exist or cannot be dropped.');
    END;

    -- Create NA_SUPERVISOR user
    EXECUTE IMMEDIATE 'CREATE USER NA_SUPERVISOR IDENTIFIED BY "Datacell2023#"';
    EXECUTE IMMEDIATE 'GRANT CONNECT TO NA_SUPERVISOR';
    EXECUTE IMMEDIATE 'GRANT CREATE SESSION TO NA_SUPERVISOR';
    
    DBMS_OUTPUT.PUT_LINE('User NA_SUPERVISOR created and granted CREATE SESSION.');

    -- Grant INSERT and SELECT privileges on the ATTENDANCE table to NA_SUPERVISOR
    EXECUTE IMMEDIATE 'GRANT INSERT, SELECT ON VIEW_ATTENDANCE TO NA_SUPERVISOR';
    DBMS_OUTPUT.PUT_LINE('INSERT and SELECT privileges on ATTENDANCE table granted to NA_SUPERVISOR.');

    -- Grant SELECT privilege on the VIEW_ATTENDANCE view to NA_SUPERVISOR
    --EXECUTE IMMEDIATE 'GRANT SELECT ON APP_ADMIN.VIEW_ATTENDANCE TO NA_SUPERVISOR';
    DBMS_OUTPUT.PUT_LINE('SELECT privilege on VIEW_ATTENDANCE view granted to NA_SUPERVISOR.');

    -- Grant EXECUTE privilege on procedures to NA_SUPERVISOR
    --EXECUTE IMMEDIATE 'GRANT EXECUTE ON APP_ADMIN.APP_ATTENDANCE TO NA_SUPERVISOR';
    EXECUTE IMMEDIATE 'GRANT EXECUTE ON INSERT_ATTENDANCE TO NA_SUPERVISOR';
    EXECUTE IMMEDIATE 'GRANT EXECUTE ON UPDATE_ATTENDANCE TO NA_SUPERVISOR';
    EXECUTE IMMEDIATE 'GRANT EXECUTE ON DELETE_ATTENDANCE TO NA_SUPERVISOR';
    DBMS_OUTPUT.PUT_LINE('Procedures INSERT_ATTENDANCE, UPDATE_ATTENDANCE, DELETE_ATTENDANCE granted to NA_SUPERVISOR.');

    -- Delete STUDENT_USER user if exists
    BEGIN
        EXECUTE IMMEDIATE 'DROP USER STUDENT_USER CASCADE';
        DBMS_OUTPUT.PUT_LINE('User STUDENT_USER dropped.');
    EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('User STUDENT_USER does not exist or cannot be dropped.');
    END;

    -- Create STUDENT_USER user
    EXECUTE IMMEDIATE 'CREATE USER STUDENT_USER IDENTIFIED BY "Datapack2023#"';
    EXECUTE IMMEDIATE 'GRANT CONNECT TO STUDENT_USER';
    EXECUTE IMMEDIATE 'GRANT CREATE SESSION TO STUDENT_USER';
    DBMS_OUTPUT.PUT_LINE('User STUDENT_USER created and granted CREATE SESSION.');

    -- Grant SELECT privilege on the CURRENT_SALARY view to STUDENT_USER
    EXECUTE IMMEDIATE 'GRANT SELECT ON APP_ADMIN.CURRENT_SALARY TO STUDENT_USER';
    DBMS_OUTPUT.PUT_LINE('SELECT privilege on CURRENT_SALARY view granted to STUDENT_USER.');

    -- Grant EXECUTE privilege on specified procedures to STUDENT_USER
    EXECUTE IMMEDIATE 'GRANT EXECUTE ON GET_PAYROLL_DETAILS TO STUDENT_USER';
    EXECUTE IMMEDIATE 'GRANT EXECUTE ON VACANT_JOBS TO STUDENT_USER';
    EXECUTE IMMEDIATE 'GRANT EXECUTE ON GET_JOB_PROFILE TO STUDENT_USER';
    DBMS_OUTPUT.PUT_LINE('Procedures GET_PAYROLL_DETAILS, VACANT_JOBS, GET_JOB_PROFILE granted to STUDENT_USER.');

EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('An unexpected error occurred: ' || SQLERRM);
END;
/
